version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lvup-edu-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-lvup_edu}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - lvup-edu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lvup-edu-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - lvup-edu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Server
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: development
    container_name: lvup-edu-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-lvup_edu}
      REDIS_URL: redis://redis:6379
      PORT: 8000
    ports:
      - "${API_PORT:-8000}:8000"
      - "${API_DEBUG_PORT:-9229}:9229" # Debug port
    volumes:
      - ./apps/api:/app
      - /app/node_modules
      - ./packages:/packages
      - api_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lvup-edu-network
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Application
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    container_name: lvup-edu-web
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://api:8000
      NEXTAUTH_URL: http://localhost:3000
    ports:
      - "${WEB_PORT:-3000}:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
      - ./packages:/packages
    depends_on:
      - api
    networks:
      - lvup-edu-network
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lvup-edu-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
      - api
    networks:
      - lvup-edu-network

  # Supabase Local (Optional - for local development)
  supabase:
    image: supabase/postgres:15.1.0.88
    container_name: lvup-edu-supabase
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${SUPABASE_DB_USER:-supabase}
      POSTGRES_PASSWORD: ${SUPABASE_DB_PASSWORD:-supabase}
      POSTGRES_DB: ${SUPABASE_DB_NAME:-supabase}
    ports:
      - "${SUPABASE_DB_PORT:-54322}:5432"
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    networks:
      - lvup-edu-network
    profiles:
      - supabase-local

  # MinIO for S3-compatible storage (Optional)
  minio:
    image: minio/minio:latest
    container_name: lvup-edu-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - lvup-edu-network
    profiles:
      - storage-local

  # Monitoring and Observability
  prometheus:
    image: prom/prometheus:latest
    container_name: lvup-edu-prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - lvup-edu-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: lvup-edu-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - lvup-edu-network
    profiles:
      - monitoring

  # Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: lvup-edu-loki
    restart: unless-stopped
    ports:
      - "${LOKI_PORT:-3100}:3100"
    volumes:
      - ./docker/loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - lvup-edu-network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  supabase_data:
    driver: local
  minio_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  api_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  lvup-edu-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16